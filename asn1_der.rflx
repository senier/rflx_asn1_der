package ASN1_DER is

   type Tag_Universal is
      (UT_INTEGER           => 16#02#,
       UT_BIT_STRING        => 16#03#,
       UT_OCTET_STRING      => 16#04#,
       UT_NULL              => 16#05#,
       UT_OBJECT_IDENTIFIER => 16#06#,
       UT_UTF8String        => 16#0C#,
       UT_SEQUENCE          => 16#10#,
       UT_SET               => 16#11#,
       UT_PrintableString   => 16#13#,
       UT_IA5String         => 16#16#,
       UT_UTCTime           => 16#17#,
       UT_GeneralizedTime   => 16#18#) with Size => 5;

   type Tag_Raw is mod 2**5;

   type Tag_Class is
      (Cl_Universal        => 0,
       Cl_Application      => 1,
       Cl_Context_Specific => 2,
       Cl_Private          => 3) with Size => 2;

   type Tag is
      message
         Class : Tag_Class;
         Constructed : Boolean
            then Universal
               if Class = Cl_Universal
            then Raw
               if Class /= Cl_Universal;
         Raw : Tag_Raw
            then null;
         Universal : Tag_Universal
            then null
               if (Universal /= UT_SEQUENCE and Universal /= UT_SET) or Constructed = True;
      end message;

   type Length is range 0 .. 127 with Size => 8;
   type Unused is range 0 .. 7 with Size => 8;

   type Byte is mod 2**8;
   type Byte_Array is array of Byte;

   type Value is mod 2**7;
   type Integer_Chunk is
      message
         Flag : Boolean;
         Value : Value;
      end message;

   -- ISSUE: Componolit/RecordFlux#401
   -- type Integer_List is
   --    message
   --       Chunk : Integer_Chunk
   --          then Next
   --             with Length => Message'Length - 8
   --             if Chunk_Flag = True
   --          then null
   --             if Chunk_Flag = False;
   --       Next : Opaque;
   --    end message;
   -- for Integer_List use (Next => Integer_Chunk);

   type Digit is range 48 .. 57 with Size => 8;
   type Zulu is range 90 .. 90 with Size => 8;

   type Number is
      message
         H : Digit;
         L : Digit;
      end message;

   type UTCTime is
      message
         Year : Number;
         Month : Number
            then Day
               if 10 * (Month_H - 48) + (Month_L - 48) < 13
                  and 10 * (Month_H - 48) + (Month_L - 48) > 0;
         Day : Number
            then Hour
               --  FIXME: Actual days of month not considered
               if 10 * (Day_H - 48) + (Day_L - 48) < 32
                  and 10 * (Day_H - 48) + (Day_L - 48) > 0;
         Hour : Number
            then Minute
               if 10 * (Hour_H - 48) + (Hour_L - 48) < 24;
         Minute : Number
            then Second
               if 10 * (Minute_H - 48) + (Minute_L - 48) < 60;
         Second : Number
            then Zulu
               if 10 * (Second_H - 48) + (Second_L - 48) < 60;
         Zulu : Zulu;
      end message;

   type GeneralizedTime is
      message
         G_Century : Number;
         G : UTCTime;
      end message;

   type Message is
      message
         Tag    : Tag;
         Length : Length
            then Integer
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_INTEGER
                  and Length = 1
            then Unused
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_BIT_STRING
            then Data
               with Length => 8 * Length
               if Tag_Class = Cl_Universal
                  and (Tag_Universal = UT_OCTET_STRING
                        -- Handled as Opaque and not checked for compliance for now
                        -- ISSUE: Componolit/RecordFlux#78
                       or Tag_Universal = UT_UTF8String
                       or Tag_Universal = UT_PrintableString
                       or Tag_Universal = UT_IA5String)
            then null
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_NULL
                  and Length = 0
            then Data
               -- Handled as Opaque for now
               -- ISSUE: Componolit/RecordFlux#401
               -- ISSUE: Componolit/RecordFlux#8
               with Length => 8 * Length
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_OBJECT_IDENTIFIER
            then UTCTime
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_UTCTime
                  and Length = 13
            then GeneralizedTime
               if Tag_Class = Cl_Universal
                  and Tag_Universal = UT_GeneralizedTime
                  and Length = 15;
         Integer : Integer_Chunk
            then null;
         Unused : Unused
            then Data
               with Length => 8 * (Length - 1)
               if Length > 1
            then null
               --  Are BIT STRINGs allowed to have zero length?
               if Length = 1;
         Data : Byte_Array
            then null;
         UTCTime : UTCTime
            then null;
         GeneralizedTime : GeneralizedTime
            then null;
      end message;

end ASN1_DER;
